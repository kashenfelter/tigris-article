{
    "collab_server" : "",
    "contents" : "library(tigris)\nlibrary(sp)\n\ndfw_counties <- c(\"Dallas\", \"Tarrant\", \"Denton\", \"Collin \")\n\ndfw <- rbind_tigris(\n  lapply(\n    dfw_counties, function(x) tracts(\"TX\", x, cb = TRUE)\n  )\n)\n\n\nlibrary(tigris)\nlibrary(ggplot2)\nlibrary(ggthemes)\n\nvt <- state_legislative_districts('Vermont', house = 'upper', cb = TRUE)\n\nvt_map <- fortify(vt)\n\nggplot() +\n  geom_map(data = vt_map, map = vt_map,\n           aes(x = long, y = lat, map_id = id),\n           color = \"navy\", fill = \"lightgrey\",\n           size = 0.25) +\n  coord_map() +\n  theme_map()\n\n\nlibrary(tigris)\nlibrary(acs)\nlibrary(stringr)\nlibrary(tmap)\nlibrary(rgdal)\n\ndfw_counties <- c('Dallas', 'Tarrant', 'Denton', 'Rockwall', 'Collin ',\n                  'Wise', 'Parker', 'Ellis', 'Kaufman', 'Hunt', 'Delta', 'Johnson')\n\ndfw_tracts <- tracts('Texas', county = dfw_counties, cb = TRUE)\n\nto_fips <- function(state, county_name) {\n  with_county <- paste(county_name, 'County')\n  sub1 <- fips_codes[fips_codes$county == with_county & fips_codes$state == state, ]\n  return(as.numeric(sub1$county_code))\n\n}\n\ndfw_fips <- sapply(dfw_counties, function(x) to_fips('TX', x))\n\nincome_data <- acs.fetch(endyear = 2012,\n                         geography = geo.make(state = \"TX\",\n                                              county = dfw_fips,\n                                              tract = \"*\"),\n                         variable = \"B19013_001\")\n\nincome_df <- data.frame(paste0(as.character(income_data@geography$state),\n                               str_pad(as.character(income_data@geography$county), 3, 'left', '0'),\n                               str_pad(as.character(income_data@geography$tract), 5, 'left', '0')),\n                        income_data@estimate)\n\ncolnames(income_df) <- c(\"GEOID\", \"hhincome\")\n\n# dfw_merged <- geo_join(dfw_tracts, income_df, \"GEOID\", \"GEOID\")\n\ndfw_merged <- geo_join(dfw_tracts, income_df, by = \"GEOID\")\n\nrds <- primary_roads()\n\nto_utm14n <- function(x) {\n  return(spTransform(x, CRS('+init=epsg:26914')))\n}\n\ntm_shape(to_utm14n(dfw_merged)) +\n  tm_fill('hhincome', style = 'quantile', n = 7, palette = 'Greens', title = '') +\ntm_shape(rds) +\n  tm_lines(col = 'darkgrey') +\ntm_layout(bg.color = 'ivory', title = 'Median household income by Census tract, Dallas-Fort Worth',\n          legend.position = c('right', 'bottom'), title.bg.color = 'ivory', legend.text.size = 1,\n          legend.width = 0.2, legend.frame = TRUE) +\ntm_credits('Data source: 2008-2012 American Community Survey',\n           position = c('left', 'bottom'))\n\nlibrary(svgPanZoom)\nlibrary(gridSVG)\n\nm <- tm_shape(to_utm14n(dfw_merged)) +\n  tm_fill('hhincome', style = 'quantile', n = 7, palette = 'Greens', title = '') +\n  tm_shape(rds) +\n  tm_lines(col = 'darkgrey') +\n  tm_layout(bg.color = 'ivory', title = 'Median household income by Census tract, Dallas-Fort Worth',\n            legend.position = c('right', 'bottom'), title.bg.color = 'ivory', legend.text.size = 1,\n            legend.width = 0.2, legend.frame = TRUE) +\n  tm_credits('Data source: 2008-2012 American Community Survey',\n             position = c('left', 'bottom'))\n\n\nsvgPanZoom(m)\n\nlibrary(rnaturalearth)\nlibrary(WDI)\nlibrary(tigris)\nlibrary(tmap)\n\ndat <- WDI(country = \"all\",\n           indicator = \"SP.DYN.LE00.IN\",\n           start = 2012,\n           end = 2012)\n\ndat$SP.DYN.LE00.IN <- round(dat$SP.DYN.LE00.IN, 1)\n\ncountries <- ne_countries()\n\ncountries2 <- geo_join(countries, dat, 'iso_a2', 'iso2c')\n\ncountries2 <- geo_join(countries, dat, 'iso_a2', 'iso2c', how = 'inner')\n\ntm_shape(countries2) +\n  tm_fill('SP.DYN.LE00.IN', style = 'quantile', n = 7, palette = 'Reds')\n\n\nd <- rnorm(1000)\n\nlibrary(ggplot2)\n\ng <- ggplot(dat, aes(x = SP.DYN.LE00.IN)) +\n  geom_histogram()\n\nlibrary(plotly)\n\nggplotly(g)\n\n#################################\n#++Analyze which block groups in Cass County, ND are within 2km of the Red River\nlibrary(tigris)\nlibrary(rgeos)\nlibrary(rgdal)\n\nto_utm14n <- function(x) {\n  return(spTransform(x, CRS('+init=epsg:26914')))\n}\n \nwater <- to_utm14n(linear_water('ND', 'Cass'))\n\nbgs <- to_utm14n(block_groups('ND', 'Cass'))\n\npl <- to_utm14n(places('ND'))\n\nred_river <- gLineMerge(water[grep('Red Riv', water$FULLNAME), ]) \n\nfargo <- pl[pl$NAME == 'Fargo', ]\n\nfargo_bgs <- bgs[as.vector(gWithin(bgs, fargo, byid = TRUE)), ]\n\nfargo_bgs$distance <- as.vector(gDistance(fargo_bgs, red_river, byid = TRUE))\n\nwithin_500m <- fargo_bgs[fargo_bgs$distance < 500, ]\n\nlibrary(ggmap)\n\nfargo_xy <- spTransform(within_500m, CRS(\"+proj=longlat +datum=WGS84\"))\n\ndata <- fortify(fargo_xy)\n\nggmap(get_map(location = 'Fargo', zoom = 12, source = 'stamen', maptype = 'toner-lite')) + \n  geom_polygon(data = data, aes(x = long, y = lat, group = group), \n               alpha = 0.5, fill = 'blue', color = 'black')\n",
    "created" : 1449080215579.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1156284372",
    "id" : "E55057C9",
    "lastKnownWriteTime" : 1449660979,
    "path" : "C:/Users/kylewalker/Dropbox/Research/tigris-article/tigris_code.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}